//* LinkedList class is a doubly linked list that is designed to be able to accept a new first or last value
/* and print the list backward and forward*/
public class LinkedList
{
  private Node head; //field variable head of type Node
  private int size; //field variable size of type int
  
  //* LinkedList constructor assigns values to the field variables*/
 public LinkedList()
 {
   head = null; //head is set to null
   size = 0; //size is set to 0
 }
 //* method setFirst is designed to accept a new value at the front of the list*/
 public void setFirst(int value)
 {
   if (head == null)
   {
     head = new Node(null, value, null);
   }
   else
   {
     Node newNode = new Node(null, value, head);
     head.previous = newNode;
     head = newNode;
   }
   size++;
 }
 public void setLast(int value)
 {
   if (head==null)
   {
     head = new Node(null, value, null);
   }
   else
   {
     Node current = head;
     while(current.next != null)
     {
       current = current.next;
     }
     Node newNode = new Node(current, value, null);
     current.next = newNode;
   }
 }
 public int size()
 {
   return size;
 }
 public void forwardPrint()
 {
   Node current = head;
   while(current !=null)
   {
     System.out.print(current.Value()+", ");
     current = current.next;
   }
 }
 public boolean setHead()
 {
  return head == null; 
 }
 public static void main(String[] args)
 {
  LinkedList x = new LinkedList();
  x.setFirst(3);
  x.setFirst(2);
  x.setFirst(1);
  x.setLast(4);
  x.forwardPrint();
  System.out.println("");
  
 }
}

